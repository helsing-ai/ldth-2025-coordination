syntax = "proto3";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

package simulation;

service Simulation {
  rpc Start(google.protobuf.Empty) returns (SimulationParameters) {}
  rpc UnitControl(stream UnitCommand) returns (stream UnitStatus) {}
  rpc LaunchStrikeUnit(google.protobuf.StringValue) returns (UnitLaunched) {}
  rpc GetSimulationStatus(google.protobuf.StringValue) returns (SimulationStatus) {}
}

message SimulationParameters {
  string id = 1;
  Vector2 base_pos = 2;
  map<string, Vector2> sensor_units = 3;
}

message UnitLaunched {
  string id = 1;
  Vector2 pos = 2;
}

message Vector2 {
  float x = 1;
  float y = 2;
}

message UnitCommand {
  message ThrustCommand {
    Vector2 impulse = 1;
  }

  message MsgCommand {
    optional string dst = 1;
    google.protobuf.Any msg = 2;
  }

  oneof command {
     ThrustCommand thrust = 1;
     MsgCommand msg = 2;
  }
}

message UnitStatus {
  Vector2 pos = 1;
  optional Detections detections = 2;
  repeated UnitMessage messages = 3;
}

message UnitMessage {
  string src = 1;
  google.protobuf.Any value = 2;
}

message Detections {
  optional Detection north = 1;
  optional Detection northeast = 2;
  optional Detection east = 3;
  optional Detection southeast = 4;
  optional Detection south = 5;
  optional Detection southwest = 6;
  optional Detection west = 7;
  optional Detection northwest = 8;
}

message Detection {
  enum Class {
    OBSTACLE = 0;
    TARGET = 1;
  }

  Class class = 1;
  float distance = 2;
}


message SimulationStatus {
  enum Status {
    RUNNING = 0;
    SUCCESS = 1;
    TIMED_OUT = 2;
    CANCELED = 3;
  }

  Status status = 1;
}
